(function() {
  var p, pragmas, sortf, spell_var, variants, _, _i, _len;

  _ = require('underscore-plus');

  pragmas = ['LINE', 'OPTIONS', 'OPTIONS_GHC', 'OPTIONS_HADDOCK', 'LANGUAGE', 'INCLUDE', 'OPTIONS_HUGS', 'OPTIONS_NHC98', 'OPTIONS_JHC', 'OPTIONS_YHC', 'OPTIONS_CATCH', 'OPTIONS_DERIVE', 'CFILES', 'CONTRACT', 'RULES', 'INLINE', 'INLINABLE', 'INLINEABLE', 'NOTINLINE', 'SPECIALIZE', 'SOURCE', 'WARNING', 'DEPRECATED', 'SCC', 'GENERATED', 'CORE', 'UNPACK', 'NOUNPACK', 'ANN', 'VECTORIZE', 'NOVECTORIZE', 'MINIMAL', 'OVERLAPS', 'OVERLAPPABLE', 'OVERLAPPING', 'INCOHERENT', 'CTYPE', 'INLINE CONLIKE', 'NOTINLINE CONLIKE', 'SPECIALIZE INLINE', 'SPECIALIZE NOTINLINE', 'VECTORIZE SCALAR'];

  spell_var = _.invert({
    'NOINLINE': 'NOTINLINE',
    'SPECIALISE': 'SPECIALIZE',
    'VECTORISE': 'VECTORIZE',
    'NOVECTORISE': 'NOVECTORIZE',
    'CONSTRUCTORLIKE': 'CONLIKE'
  });

  variants = function(p) {
    var i, len, mask, mask0, w, ws, _i, _j, _len, _ref, _results;
    len = p.split(' ').length;
    mask0 = Math.pow(2, len) - 1;
    _results = [];
    for (mask = _i = 0; 0 <= mask0 ? _i <= mask0 : _i >= mask0; mask = 0 <= mask0 ? ++_i : --_i) {
      ws = p.split(' ');
      for (i = _j = 0, _len = ws.length; _j < _len; i = ++_j) {
        w = ws[i];
        if (mask & Math.pow(2, i)) {
          ws[i] = (_ref = spell_var[w]) != null ? _ref : w;
        }
      }
      _results.push(ws.join(' '));
    }
    return _results;
  };

  for (_i = 0, _len = pragmas.length; _i < _len; _i++) {
    p = pragmas[_i];
    pragmas.push.apply(pragmas, variants(p));
  }

  sortf = function(a, b) {
    var d;
    d = b.length - a.length;
    if (d !== 0) {
      return d;
    } else {
      return a.localeCompare(b);
    }
  };

  module.exports = _.uniq(pragmas.sort(sortf));

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvZXBzZS9FcENvbmZGaWxlcy9hdG9tLy5hdG9tL3BhY2thZ2VzL2xhbmd1YWdlLWhhc2tlbGwvc3JjL2luY2x1ZGUvcHJhZ21hcy5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLE1BQUEsbURBQUE7O0FBQUEsRUFBQSxDQUFBLEdBQUksT0FBQSxDQUFRLGlCQUFSLENBQUosQ0FBQTs7QUFBQSxFQUdBLE9BQUEsR0FBVSxDQUVSLE1BRlEsRUFJUixTQUpRLEVBS1IsYUFMUSxFQU1SLGlCQU5RLEVBT1IsVUFQUSxFQVFSLFNBUlEsRUFVUixjQVZRLEVBV1IsZUFYUSxFQVlSLGFBWlEsRUFhUixhQWJRLEVBY1IsZUFkUSxFQWVSLGdCQWZRLEVBZ0JSLFFBaEJRLEVBaUJSLFVBakJRLEVBbUJSLE9BbkJRLEVBb0JSLFFBcEJRLEVBcUJSLFdBckJRLEVBc0JSLFlBdEJRLEVBdUJSLFdBdkJRLEVBd0JSLFlBeEJRLEVBeUJSLFFBekJRLEVBMEJSLFNBMUJRLEVBMkJSLFlBM0JRLEVBNEJSLEtBNUJRLEVBNkJSLFdBN0JRLEVBOEJSLE1BOUJRLEVBK0JSLFFBL0JRLEVBZ0NSLFVBaENRLEVBaUNSLEtBakNRLEVBa0NSLFdBbENRLEVBbUNSLGFBbkNRLEVBb0NSLFNBcENRLEVBcUNSLFVBckNRLEVBc0NSLGNBdENRLEVBdUNSLGFBdkNRLEVBd0NSLFlBeENRLEVBeUNSLE9BekNRLEVBMkNSLGdCQTNDUSxFQTRDUixtQkE1Q1EsRUE2Q1IsbUJBN0NRLEVBOENSLHNCQTlDUSxFQStDUixrQkEvQ1EsQ0FIVixDQUFBOztBQUFBLEVBc0RBLFNBQUEsR0FBWSxDQUFDLENBQUMsTUFBRixDQUFTO0FBQUEsSUFDbkIsVUFBQSxFQUFZLFdBRE87QUFBQSxJQUVuQixZQUFBLEVBQWMsWUFGSztBQUFBLElBR25CLFdBQUEsRUFBYSxXQUhNO0FBQUEsSUFJbkIsYUFBQSxFQUFlLGFBSkk7QUFBQSxJQUtuQixpQkFBQSxFQUFtQixTQUxBO0dBQVQsQ0F0RFosQ0FBQTs7QUFBQSxFQThEQSxRQUFBLEdBQVcsU0FBQyxDQUFELEdBQUE7QUFDVCxRQUFBLHdEQUFBO0FBQUEsSUFBQSxHQUFBLEdBQU0sQ0FBQyxDQUFDLEtBQUYsQ0FBUSxHQUFSLENBQVksQ0FBQyxNQUFuQixDQUFBO0FBQUEsSUFDQSxLQUFBLEdBQVEsSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksR0FBWixDQUFBLEdBQW1CLENBRDNCLENBQUE7QUFFQTtTQUFZLHNGQUFaLEdBQUE7QUFDRSxNQUFBLEVBQUEsR0FBSyxDQUFDLENBQUMsS0FBRixDQUFRLEdBQVIsQ0FBTCxDQUFBO0FBQ0EsV0FBQSxpREFBQTtrQkFBQTtBQUNFLFFBQUEsSUFBRyxJQUFBLEdBQU8sSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksQ0FBWixDQUFWO0FBQ0UsVUFBQSxFQUFHLENBQUEsQ0FBQSxDQUFILDBDQUF1QixDQUF2QixDQURGO1NBREY7QUFBQSxPQURBO0FBQUEsb0JBSUEsRUFBRSxDQUFDLElBQUgsQ0FBUSxHQUFSLEVBSkEsQ0FERjtBQUFBO29CQUhTO0VBQUEsQ0E5RFgsQ0FBQTs7QUF3RUEsT0FBQSw4Q0FBQTtvQkFBQTtBQUNFLElBQUEsT0FBTyxDQUFDLElBQVIsZ0JBQWEsUUFBQSxDQUFTLENBQVQsQ0FBYixDQUFBLENBREY7QUFBQSxHQXhFQTs7QUFBQSxFQTJFQSxLQUFBLEdBQVEsU0FBQyxDQUFELEVBQUksQ0FBSixHQUFBO0FBQ04sUUFBQSxDQUFBO0FBQUEsSUFBQSxDQUFBLEdBQUksQ0FBQyxDQUFDLE1BQUYsR0FBVyxDQUFDLENBQUMsTUFBakIsQ0FBQTtBQUNBLElBQUEsSUFBRyxDQUFBLEtBQU8sQ0FBVjthQUNFLEVBREY7S0FBQSxNQUFBO2FBR0UsQ0FBQyxDQUFDLGFBQUYsQ0FBZ0IsQ0FBaEIsRUFIRjtLQUZNO0VBQUEsQ0EzRVIsQ0FBQTs7QUFBQSxFQWtGQSxNQUFNLENBQUMsT0FBUCxHQUFpQixDQUFDLENBQUMsSUFBRixDQUFPLE9BQU8sQ0FBQyxJQUFSLENBQWEsS0FBYixDQUFQLENBbEZqQixDQUFBO0FBQUEiCn0=

//# sourceURL=/home/epse/EpConfFiles/atom/.atom/packages/language-haskell/src/include/pragmas.coffee
