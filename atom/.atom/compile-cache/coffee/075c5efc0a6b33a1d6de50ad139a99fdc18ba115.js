(function() {
  var CP, arr, exp, fs, genp, k, output, ref, run, v;

  CP = require('child_process');

  fs = require('fs');

  genp = CP.execSync("ghc-mod browse -dp Prelude", {
    encoding: 'utf8'
  }).split(/\r?\n|\r/).slice(0, -1);

  arr = function(input) {
    var lines;
    lines = input.map(function(line) {
      return line.split(/ :: /)[0] || line;
    });
    return lines;
  };

  run = function(filter) {
    var p, rx;
    if (typeof filter !== "function") {
      rx = filter;
      filter = function(line) {
        return line.match(rx);
      };
    }
    p = arr(genp.filter(filter));
    return p;
  };

  exp = {};

  exp.classes = run(/class/);

  exp.funct = run(/^[a-z]/);

  exp.constr = run(/^[A-Z].*from:/);

  exp.types = run(/data|type/);

  (ref = exp.types).push.apply(ref, run(function(line) {
    return line.match(/^[A-Z]/) && !line.match(/::/) && !line.match(/True|False/);
  }));

  exp.constr.push('True', 'False');

  output = [];

  for (k in exp) {
    v = exp[k];
    output.push(k + " = " + (JSON.stringify(v)));
  }

  output.push("module.exports = { " + (Object.keys(exp)) + " }");

  fs.writeFileSync('src/include/prelude.coffee', output.join('\n'), 'utf8');

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL2hvbWUvZXBzZS9FcENvbmZGaWxlcy9hdG9tLy5hdG9tL3BhY2thZ2VzL2xhbmd1YWdlLWhhc2tlbGwvc3JjL21ha2VwcmVsdWRlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtBQUFBLE1BQUE7O0VBQUEsRUFBQSxHQUFLLE9BQUEsQ0FBUSxlQUFSOztFQUNMLEVBQUEsR0FBSyxPQUFBLENBQVEsSUFBUjs7RUFFTCxJQUFBLEdBQU8sRUFBRSxDQUFDLFFBQUgsQ0FBWSw0QkFBWixFQUEwQztJQUFBLFFBQUEsRUFBVSxNQUFWO0dBQTFDLENBQTJELENBQUMsS0FBNUQsQ0FBa0UsVUFBbEUsQ0FBNkUsQ0FBQyxLQUE5RSxDQUFvRixDQUFwRixFQUF1RixDQUFDLENBQXhGOztFQUVQLEdBQUEsR0FBTSxTQUFDLEtBQUQ7QUFDSixRQUFBO0lBQUEsS0FBQSxHQUNFLEtBQUssQ0FBQyxHQUFOLENBQVUsU0FBQyxJQUFEO2FBQ1IsSUFBSSxDQUFDLEtBQUwsQ0FBVyxNQUFYLENBQW1CLENBQUEsQ0FBQSxDQUFuQixJQUF5QjtJQURqQixDQUFWO0FBRUYsV0FBTztFQUpIOztFQU1OLEdBQUEsR0FBTSxTQUFDLE1BQUQ7QUFDSixRQUFBO0lBQUEsSUFBRyxPQUFPLE1BQVAsS0FBbUIsVUFBdEI7TUFDRSxFQUFBLEdBQUs7TUFDTCxNQUFBLEdBQVMsU0FBQyxJQUFEO2VBQVUsSUFBSSxDQUFDLEtBQUwsQ0FBVyxFQUFYO01BQVYsRUFGWDs7SUFHQSxDQUFBLEdBQUksR0FBQSxDQUFJLElBQUksQ0FBQyxNQUFMLENBQVksTUFBWixDQUFKO0FBQ0osV0FBTztFQUxIOztFQU9OLEdBQUEsR0FBTTs7RUFFTixHQUFHLENBQUMsT0FBSixHQUFjLEdBQUEsQ0FBSSxPQUFKOztFQUNkLEdBQUcsQ0FBQyxLQUFKLEdBQVksR0FBQSxDQUFJLFFBQUo7O0VBQ1osR0FBRyxDQUFDLE1BQUosR0FBYSxHQUFBLENBQUksZUFBSjs7RUFDYixHQUFHLENBQUMsS0FBSixHQUFZLEdBQUEsQ0FBSSxXQUFKOztFQUVaLE9BQUEsR0FBRyxDQUFDLEtBQUosQ0FBUyxDQUFDLElBQVYsWUFBZ0IsR0FBQSxDQUFJLFNBQUMsSUFBRDtXQUNsQixJQUFJLENBQUMsS0FBTCxDQUFXLFFBQVgsQ0FBQSxJQUF5QixDQUFJLElBQUksQ0FBQyxLQUFMLENBQVcsSUFBWCxDQUE3QixJQUFrRCxDQUFJLElBQUksQ0FBQyxLQUFMLENBQVcsWUFBWDtFQURwQyxDQUFKLENBQWhCOztFQUVBLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBWCxDQUFnQixNQUFoQixFQUF3QixPQUF4Qjs7RUFFQSxNQUFBLEdBQVM7O0FBQ1QsT0FBQSxRQUFBOztJQUNFLE1BQU0sQ0FBQyxJQUFQLENBQWUsQ0FBRCxHQUFHLEtBQUgsR0FBTyxDQUFDLElBQUksQ0FBQyxTQUFMLENBQWUsQ0FBZixDQUFELENBQXJCO0FBREY7O0VBRUEsTUFBTSxDQUFDLElBQVAsQ0FBWSxxQkFBQSxHQUFxQixDQUFDLE1BQU0sQ0FBQyxJQUFQLENBQVksR0FBWixDQUFELENBQXJCLEdBQXVDLElBQW5EOztFQUVBLEVBQUUsQ0FBQyxhQUFILENBQWlCLDRCQUFqQixFQUErQyxNQUFNLENBQUMsSUFBUCxDQUFZLElBQVosQ0FBL0MsRUFBa0UsTUFBbEU7QUFsQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIjIS9iaW4vYmFzaFxuXG5DUCA9IHJlcXVpcmUgJ2NoaWxkX3Byb2Nlc3MnXG5mcyA9IHJlcXVpcmUgJ2ZzJ1xuXG5nZW5wID0gQ1AuZXhlY1N5bmMoXCJnaGMtbW9kIGJyb3dzZSAtZHAgUHJlbHVkZVwiLCBlbmNvZGluZzogJ3V0ZjgnKS5zcGxpdCgvXFxyP1xcbnxcXHIvKS5zbGljZSgwLCAtMSlcblxuYXJyID0gKGlucHV0KSAtPlxuICBsaW5lcyA9XG4gICAgaW5wdXQubWFwIChsaW5lKSAtPlxuICAgICAgbGluZS5zcGxpdCgvIDo6IC8pWzBdIG9yIGxpbmVcbiAgcmV0dXJuIGxpbmVzXG5cbnJ1biA9IChmaWx0ZXIpIC0+XG4gIGlmIHR5cGVvZiBmaWx0ZXIgaXNudCBcImZ1bmN0aW9uXCJcbiAgICByeCA9IGZpbHRlclxuICAgIGZpbHRlciA9IChsaW5lKSAtPiBsaW5lLm1hdGNoKHJ4KVxuICBwID0gYXJyKGdlbnAuZmlsdGVyIGZpbHRlcilcbiAgcmV0dXJuIHBcblxuZXhwID0ge31cblxuZXhwLmNsYXNzZXMgPSBydW4gL2NsYXNzL1xuZXhwLmZ1bmN0ID0gcnVuIC9eW2Etel0vXG5leHAuY29uc3RyID0gcnVuIC9eW0EtWl0uKmZyb206L1xuZXhwLnR5cGVzID0gcnVuIC9kYXRhfHR5cGUvXG5cbmV4cC50eXBlcy5wdXNoIChydW4gKGxpbmUpIC0+XG4gIGxpbmUubWF0Y2goL15bQS1aXS8pIGFuZCBub3QgbGluZS5tYXRjaCgvOjovKSBhbmQgbm90IGxpbmUubWF0Y2goL1RydWV8RmFsc2UvKSkuLi5cbmV4cC5jb25zdHIucHVzaCAnVHJ1ZScsICdGYWxzZSdcblxub3V0cHV0ID0gW11cbmZvciBrLCB2IG9mIGV4cFxuICBvdXRwdXQucHVzaCBcIiN7a30gPSAje0pTT04uc3RyaW5naWZ5KHYpfVwiXG5vdXRwdXQucHVzaCBcIm1vZHVsZS5leHBvcnRzID0geyAje09iamVjdC5rZXlzKGV4cCl9IH1cIlxuXG5mcy53cml0ZUZpbGVTeW5jICdzcmMvaW5jbHVkZS9wcmVsdWRlLmNvZmZlZScsIG91dHB1dC5qb2luKCdcXG4nKSwgJ3V0ZjgnXG4iXX0=
